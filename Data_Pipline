--> Createing stream on rae table for 3 different stream
CREATE OR REPLACE STREAM cricket.raw.for_match_stream ON TABLE cricket.raw.match_raw_tbl APPEND_ONLY  = True;

CREATE OR REPLACE STREAM cricket.raw.for_player_stream ON TABLE cricket.raw.match_raw_tbl APPEND_ONLY = True;

CREATE OR REPLACE STREAM cricket.raw.for_delivery_stream ON TABLE cricket.raw.match_raw_tbl APPEND_ONLY = True;

--> Creating a task that runs every 5 min to load json data into raw layer.
CREATE OR REPLACE TASK cricket.raw.load_json_to_raw
     WAREHOUSE = 'COMPUTE_WH'
     schedule = '5 minute'
     AS
     COPY INTO cricket.raw.match_raw_tbl FROM 
     (
     SELECT 
         t.$1:meta::OBJECT AS meta,
         t.$1:info::VARIANT AS info,
         t.$1:innings::ARRAY AS innings,

         metadata$filename,
         metadata$file_row_number,
         metadata$file_content_key,
         metadata$file_last_modified
     FROM  @cricket.land.my_stg/cricket/json (file_format => 'cricket.land.my_json_format') t
     )
     on_error = CONTINUE;

--> Creating another child task to read stream & load data into clean layer.
CREATE OR REPLACE TASK cricket.raw.load_to_clean_match
WAREHOUSE = 'COMPUTE_WH'
AFTER cricket.raw.load_json_to_raw
WHEN system$stream_has_data('cricket.raw.for_match_stream')
AS
INSERT INTO cricket.clean.match_detail_clean
SELECT
info:match_type_number::INT AS match_type_number,
info:event_name::TEXT AS event_name,
CASE
WHEN
   info:event.match_number::TEXT IS NOT NULL THEN info:event.match_number::TEXT
WHEN    
   info:event.stage::TEXT IS NOT NULL THEN info:event.stage::TEXT
ELSE
   'NA'
END AS match_stage,
   info:dates[0]::date AS event_date,
   DATE_PART('year',info:dates[0]::date) AS event_year,
   DATE_PART('month',info:dates[0]::date) AS event_month,
   DATE_PART('day',info:dates[0]::date) AS event_day,
   info:match_type::TEXT AS match_type,
   info:season::TEXT AS season,
   info:team_type::TEXT AS team_type,
   info:overs::TEXT AS overs,
   info:city::TEXT AS city,
   info:venue:: TEXT AS venue,
   info:gender::TEXT AS gender,
   info:teams[0]::TEXT AS first_team,
   info:teams[1]::TEXT AS second_team,
   CASE
       WHEN info:outcome.winner IS NOT NULL THEN 'Result Declared'
       WHEN info:outcome.result = 'tie' THEN 'Tie'
       WHEN info:outcome.result = 'no result' THEN 'No Result'
       ELSE info:outcome.result
   END AS match_result,
   CASE
       WHEN info:outcome.winner IS NOT NULL THEN info:outcome.winner
       ELSE 'NA'
   END AS winner ,  

   info:toss.winner::TEXT AS  toss_winner,
   INITCAP(info:toss.decision::TEXT) AS toss_decision,

   stg_file_name,
   stg_file_row_number,
   stg_file_hashkey,
   stg_modified_ts
FROM 
   cricket.raw.for_match_stream;

--> Creating a child task after match data is populate
CREATE OR REPLACE TASK cricket.raw.load_to_clean_player
WAREHOUSE = 'COMPUTE_WH'
AFTER cricket.raw.load_to_clean_match
WHEN system$stream_has_data('cricket.raw.for_player_stream')
AS
INSERT INTO cricket.clean.player_clean_tbl
SELECT
    rcm.info:match_type_number::INT AS match_type_number,
    p.path::TEXT AS country,
    team.value::TEXT AS player_name,
    stg_file_name,
    stg_file_row_number,
    stg_file_hashkey,
    stg_modified_ts
FROM cricket.raw.for_match_stream rcm,
LATERAL FLATTEN (input => rcm.info:players ) p,
LATERAL FLATTEN (input => p.value) team;


--> Creating delivery clean table
CREATE OR REPLACE TASK cricket.raw.load_to_clean_delivery
WAREHOUSE = 'COMPUTE_WH'
AFTER cricket.raw.load_to_clean_player
WHEN system$stream_has_data('cricket.raw.for_delivery_stream')
AS
INSERT INTO cricket.clean.delivery_clean_tbl
SELECT
    m.info:match_type_number::INT AS match_type_number,
    i.info::team_id::INT AS team_id,
    i.value:team::TEXT AS team_name,
    o.value:over::INT+1 AS over,
    d.value:bowler::TEXT AS bowler,
    d.value:batter::TEXT AS batter,
    d.value:not_striker::TEXT AS non_striker,
    d.value:runs.batter::TEXT AS runs,
    d.value:runs.extras::TEXT AS extras,
    d.value:runs.total::TEXT AS total,
    e.key::TEXT AS extra_type,
    e.value::NUMBER AS extra_runs,
    w.value:player_out::TEXT AS player_out,
    w.value:kind::TEXT AS player_out_kind,
    w.value:fielders::VARIANT AS player_out_fielders,
    m.stg_file_name,
    m.stg_file_row_number,
    m.stg_file_hashkey,
    m.stg_modified_ts
    
FROM cricket.raw.for_delivery_stream m,
LATERAL FLATTEN (input => m.innings) i,
LATERAL FLATTEN (input => i.value:overs) o,
LATERAL FLATTEN (input => o.value:deliveries) d,
LATERAL FLATTEN (input => d.value:extras, outer => True) e,
LATERAL FLATTEN (input => d.value:wickets, outer => True) w;


--> Creating task team_dim 
CREATE OR REPLACE TASK cricket.raw.load_to_team_dim
WAREHOUSE = 'COMPUTE_WH'
AFTER cricket.raw.load_to_clean_delivery
AS
INSERT INTO cricket.consumption.team_dim (team_name)(
      SELECT DISTINCT team_name FROM(
      SELECT first_team AS team_name FROM cricket.clean.match_detail_clean
      UNION ALL 
      SELECT second_team AS team_name FROM cricket.clean.match_detail_clean
)
      MINUS
      SELECT team_name FROM cricket.consumption.team_dim
      );


--> Create task player_dim
CREATE OR REPLACE TASK cricket.raw.load_to_player_dim
   WAREHOUSE = 'COMPUTE_WH'
   AFTER cricket.raw.load_to_clean_delivery
   AS
   INSERT INTO cricket.consumption.player_dim (team_id, player_name) (
   SELECT b.team_id, a.player_name
   FROM
   cricket.clean.player_clean_tbl a
   JOIN cricket.consumption.team_dim b ON a.country = b.team_name
   GROUP BY 
   b.team_id,
   a.player_name
   MINUS
   SELECT team_id, player_name 
   FROM cricket.consumption.player_dim
   );


--> Creating task venue dim
CREATE OR REPLACE TASK cricket.raw.load_to_venue_dim
WAREHOUSE = 'COMPUTE_WH'
AFTER cricket.raw.load_to_clean_delivery
AS 
INSERT INTO cricket.consumption.venue_dim(venue_name, city) (
     SELECT venue, city FROM(
     SELECT venue,
     CASE WHEN city IS NULL THEN 'NA'
     ELSE  city
     END AS city
     FROM cricket.clean.match_detail_clean
      )
GROUP BY venue, city
MINUS
SELECT venue_name, city 
FROM cricket.consumption.venue_dim
);

--> Populate the fact table
CREATE OR REPLACE TASK cricket.raw.load_match_fact
WAREHOUSE = 'COMPUTE_WH'
AFTER cricket.raw.load_to_team_dim, cricket.raw.load_to_player_dim, cricket.raw.load_to_venue_dim
AS
INSERT INTO cricket.consumption.match_fact
SELECT a.* 
FROM(
SELECT 
    m.match_type_number AS match_id,
    dd.date_id AS date_id,
    0 AS referee_id,
    ftd.team_id AS first_team_id,
    std.team_id AS second_team_id,
    mtd.match_type_id AS match_type_id,
    vd.venue_id AS venue_id,
    20 AS total_overs,
    6 AS balls_per_overs,

--> Team A stats
    MAX(CASE WHEN d.team_name = m.first_team THEN d.over ELSE 0 END) AS overs_played_by_team_a,
    SUM(CASE WHEN d.team_name = m.first_team THEN 1 ELSE 0 END) AS ball_played_by_team_a,
    SUM(CASE WHEN d.team_name = m.first_team THEN d.extras ELSE 0 END) AS extra_ball_played_by_team_a,
    SUM(CASE WHEN d.team_name = m.first_team THEN d.extra_runs ELSE 0 END) AS extra_runs_scored_by_team_a,
    0 AS fours_by_team_a,
    0 AS sixes_by_team_a,
    (SUM(CASE WHEN d.team_name = m.first_team THEN d.runs ELSE 0 END) + 
     SUM(CASE WHEN d.team_name = m.first_team THEN d.extra_runs ELSE 0 END)) AS total_runs_scored_by_team_a,

--> Team B stats
    MAX(CASE WHEN d.team_name = m.second_team THEN d.over ELSE 0 END) AS overs_played_by_team_b,
    SUM(CASE WHEN d.team_name = m.second_team THEN 1 ELSE 0 END) AS ball_played_by_team_b,
    SUM(CASE WHEN d.team_name = m.second_team THEN d.extras ELSE 0 END) AS extra_ball_played_by_team_b,
    SUM(CASE WHEN d.team_name = m.second_team THEN d.extra_runs ELSE 0 END) AS extra_runs_scored_by_team_b,
    0 AS fours_by_team_b,
    0 AS sixes_by_team_b,
    (SUM(CASE WHEN d.team_name = m.second_team THEN d.runs ELSE 0 END) + 
     SUM(CASE WHEN d.team_name = m.second_team THEN d.extra_runs ELSE 0 END)) AS total_runs_scored_by_team_b,
     SUM(CASE WHEN d.team_name = m.second_team AND player_out IS NOT NULL THEN 1 ELSE 0 END) AS wicket_lost_by_team_b,
     tw.team_id AS toss_winner_team_id,
     m.toss_decision AS toss_decision,
     m.match_result AS match_result,
     mw.team_id AS winner_team_id

FROM
    cricket.clean.match_detail_clean m
    JOIN date_dim dd ON m.event_date = dd.full_dt
    JOIN team_dim ftd ON m.first_team = ftd.team_name
    JOIN team_dim std ON m.second_team = std.team_name
    JOIN match_type_dim mtd ON m.match_type = mtd.match_type
    JOIN venue_dim vd ON m.venue = vd.venue_name AND m.city = vd.city
    JOIN cricket.clean.delivery_clean_tbl d ON d.match_type_number = m.match_type_number
    JOIN cricket.consumption.team_dim tw ON m.toss_winner = tw.team_name
    JOIN cricket.consumption.team_dim mw ON m.winner = mw.team_name

GROUP BY 
    m.match_type_number,
    dd.date_id,
    referee_id,
    first.team_id,
    second.team_id,
    mtd.match_type_id,
    vd.venue_id,
    total_overs,
    toss_winner_team_id,
    m.toss_decision,
    m.match_result,
    winner_team_id
)a
LEFT JOIN cricket.consumption.match_fact b 
ON a.match_id = b.match_id
WHERE b.match_id IS NULL;


--> Creating delivary fact task
CREATE OR REPLACE TASK cricket.raw.load_delivery_fact
WAREHOUSE = 'COMPUTE_WH'
AFTER cricket.raw.load_match_fact
AS 
INSERT INTO cricket.consumption.delivery_fact
SELECT a.*
FROM (
SELECT 
   d.match_type_number AS maatch_id,
   td.team_id,
   bpd.player_id AS bowler_id,
   spd.player_id AS batter_id,
   d.over,
   d,runs,
   d.extra_runs,
   d.extra_type,
FROM cricket.clean.delivery_clean_tbl d
    JOIN cricket.consumption.team_dim td ON team_name = td.team_name
    JOIN cricket.consumption.player_dim bpd ON d.bowler = bpd.player_name
    JOIN cricket.consumption.player_dim spd ON d.batter = spd.player_name
)a
LEFT JOIN cricket.consumption.delivery_fact b ON a.match_id = b.match_id
WHERE b.match_id IS NOT NULL;


--> Resume all the task
USE ROLE accountadmin;
GRANT EXECUTE TASK, EXECUTE MANAGED TASK ON ACCOUNT TO ROLE sysadmin;
USE ROLE sysadmin;

ALTER TASK cricket.raw.load_delivery_fact RESUME;
ALTER TASK cricket.raw.load_match_fact RESUME;
ALTER TASK cricket.raw.load_to_venue_dim RESUME;
ALTER TASK cricket.raw.load_to_player_dim RESUME;
ALTER TASK cricket.raw.load_to_team_dim RESUME;
ALTER TASK cricket.raw.load_to_clean_delivery RESUME;
ALTER TASK cricket.raw.load_to_clean_player RESUME;
ALTER TASK cricket.raw.load_to_clean_match RESUME;
ALTER TASK cricket.raw.load_json_to_raw RESUME;

    

